apiVersion: batch/v1
kind: Job
metadata:
  name: tidyselect-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("tidyselect", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/tidyselect /mnt/libs/R/tidyselect && cd /home/rstudio && ls | grep "tidyselect" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "tidyselect" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "tidyselect" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: rcppde-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("RcppDE", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/RcppDE /mnt/libs/R/RcppDE && cd /home/rstudio && ls | grep "RcppDE" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "RcppDE" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "RcppDE" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: wordcloud2-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("wordcloud2", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/wordcloud2 /mnt/libs/R/wordcloud2 && cd /home/rstudio && ls | grep "wordcloud2" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "wordcloud2" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "wordcloud2" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: visnetwork-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("visNetwork", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/visNetwork /mnt/libs/R/visNetwork && cd /home/rstudio && ls | grep "visNetwork" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "visNetwork" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "visNetwork" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: vegan-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("vegan", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/vegan /mnt/libs/R/vegan && cd /home/rstudio && ls | grep "vegan" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "vegan" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "vegan" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: urltools-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("urltools", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/urltools /mnt/libs/R/urltools && cd /home/rstudio && ls | grep "urltools" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "urltools" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "urltools" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: transport-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("transport", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/transport /mnt/libs/R/transport && cd /home/rstudio && ls | grep "transport" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "transport" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "transport" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: svgpanzoom-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("svgPanZoom", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/svgPanZoom /mnt/libs/R/svgPanZoom && cd /home/rstudio && ls | grep "svgPanZoom" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "svgPanZoom" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "svgPanZoom" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: survey-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("survey", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/survey /mnt/libs/R/survey && cd /home/rstudio && ls | grep "survey" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "survey" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "survey" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: splines2-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("splines2", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/splines2 /mnt/libs/R/splines2 && cd /home/rstudio && ls | grep "splines2" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "splines2" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "splines2" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: spatstatrandom-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("spatstat.random", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/spatstat.random /mnt/libs/R/spatstat.random && cd /home/rstudio && ls | grep "spatstat.random" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "spatstat.random" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "spatstat.random" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: sn-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("sn", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/sn /mnt/libs/R/sn && cd /home/rstudio && ls | grep "sn" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "sn" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "sn" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: slider-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("slider", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/slider /mnt/libs/R/slider && cd /home/rstudio && ls | grep "slider" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "slider" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "slider" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: siggenes-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("siggenes", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/siggenes /mnt/libs/R/siggenes && cd /home/rstudio && ls | grep "siggenes" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "siggenes" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "siggenes" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: scico-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("scico", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/scico /mnt/libs/R/scico && cd /home/rstudio && ls | grep "scico" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "scico" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "scico" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: scam-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("scam", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/scam /mnt/libs/R/scam && cd /home/rstudio && ls | grep "scam" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "scam" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "scam" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: roptim-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("roptim", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/roptim /mnt/libs/R/roptim && cd /home/rstudio && ls | grep "roptim" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "roptim" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "roptim" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: rhandsontable-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("rhandsontable", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/rhandsontable /mnt/libs/R/rhandsontable && cd /home/rstudio && ls | grep "rhandsontable" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "rhandsontable" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "rhandsontable" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: rgl-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("rgl", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/rgl /mnt/libs/R/rgl && cd /home/rstudio && ls | grep "rgl" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "rgl" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "rgl" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: reshape2-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("reshape2", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/reshape2 /mnt/libs/R/reshape2 && cd /home/rstudio && ls | grep "reshape2" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "reshape2" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "reshape2" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: reshape-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("reshape", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/reshape /mnt/libs/R/reshape && cd /home/rstudio && ls | grep "reshape" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "reshape" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "reshape" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: reactable-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("reactable", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/reactable /mnt/libs/R/reactable && cd /home/rstudio && ls | grep "reactable" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "reactable" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "reactable" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: raster-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("raster", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/raster /mnt/libs/R/raster && cd /home/rstudio && ls | grep "raster" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "raster" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "raster" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: ranger-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("ranger", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/ranger /mnt/libs/R/ranger && cd /home/rstudio && ls | grep "ranger" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "ranger" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "ranger" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: quantsmooth-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("quantsmooth", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/quantsmooth /mnt/libs/R/quantsmooth && cd /home/rstudio && ls | grep "quantsmooth" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "quantsmooth" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "quantsmooth" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: quanteda-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("quanteda", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/quanteda /mnt/libs/R/quanteda && cd /home/rstudio && ls | grep "quanteda" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "quanteda" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "quanteda" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: qcmetrics-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("qcmetrics", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/qcmetrics /mnt/libs/R/qcmetrics && cd /home/rstudio && ls | grep "qcmetrics" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "qcmetrics" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "qcmetrics" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: pryr-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("pryr", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/pryr /mnt/libs/R/pryr && cd /home/rstudio && ls | grep "pryr" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "pryr" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "pryr" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: proxyc-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("proxyC", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/proxyC /mnt/libs/R/proxyC && cd /home/rstudio && ls | grep "proxyC" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "proxyC" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "proxyC" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: promises-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("promises", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/promises /mnt/libs/R/promises && cd /home/rstudio && ls | grep "promises" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "promises" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "promises" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: pillar-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("pillar", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/pillar /mnt/libs/R/pillar && cd /home/rstudio && ls | grep "pillar" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "pillar" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "pillar" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: pheatmap-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("pheatmap", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/pheatmap /mnt/libs/R/pheatmap && cd /home/rstudio && ls | grep "pheatmap" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "pheatmap" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "pheatmap" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: penalized-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("penalized", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/penalized /mnt/libs/R/penalized && cd /home/rstudio && ls | grep "penalized" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "penalized" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "penalized" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: pdftools-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("pdftools", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/pdftools /mnt/libs/R/pdftools && cd /home/rstudio && ls | grep "pdftools" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "pdftools" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "pdftools" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: paralleldist-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("parallelDist", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/parallelDist /mnt/libs/R/parallelDist && cd /home/rstudio && ls | grep "parallelDist" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "parallelDist" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "parallelDist" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: proc-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("pROC", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/pROC /mnt/libs/R/pROC && cd /home/rstudio && ls | grep "pROC" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "pROC" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "pROC" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: networkd3-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("networkD3", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/networkD3 /mnt/libs/R/networkD3 && cd /home/rstudio && ls | grep "networkD3" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "networkD3" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "networkD3" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: nabor-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("nabor", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/nabor /mnt/libs/R/nabor && cd /home/rstudio && ls | grep "nabor" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "nabor" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "nabor" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: mixsqp-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("mixsqp", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/mixsqp /mnt/libs/R/mixsqp && cd /home/rstudio && ls | grep "mixsqp" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "mixsqp" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "mixsqp" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: matchingr-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("matchingR", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/matchingR /mnt/libs/R/matchingR && cd /home/rstudio && ls | grep "matchingR" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "matchingR" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "matchingR" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: knncovertree-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("knn.covertree", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/knn.covertree /mnt/libs/R/knn.covertree && cd /home/rstudio && ls | grep "knn.covertree" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "knn.covertree" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "knn.covertree" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: ismev-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("ismev", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/ismev /mnt/libs/R/ismev && cd /home/rstudio && ls | grep "ismev" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "ismev" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "ismev" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: interp-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("interp", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/interp /mnt/libs/R/interp && cd /home/rstudio && ls | grep "interp" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "interp" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "interp" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: inaparc-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("inaparc", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/inaparc /mnt/libs/R/inaparc && cd /home/rstudio && ls | grep "inaparc" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "inaparc" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "inaparc" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: imputelcmd-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("imputeLCMD", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/imputeLCMD /mnt/libs/R/imputeLCMD && cd /home/rstudio && ls | grep "imputeLCMD" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "imputeLCMD" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "imputeLCMD" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: ic10-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("iC10", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/iC10 /mnt/libs/R/iC10 && cd /home/rstudio && ls | grep "iC10" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "iC10" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "iC10" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: huge-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("huge", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/huge /mnt/libs/R/huge && cd /home/rstudio && ls | grep "huge" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "huge" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "huge" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: hms-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("hms", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/hms /mnt/libs/R/hms && cd /home/rstudio && ls | grep "hms" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "hms" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "hms" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: graphlayouts-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("graphlayouts", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/graphlayouts /mnt/libs/R/graphlayouts && cd /home/rstudio && ls | grep "graphlayouts" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "graphlayouts" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "graphlayouts" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: googleauthr-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("googleAuthR", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/googleAuthR /mnt/libs/R/googleAuthR && cd /home/rstudio && ls | grep "googleAuthR" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "googleAuthR" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "googleAuthR" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: glmnet-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("glmnet", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/glmnet /mnt/libs/R/glmnet && cd /home/rstudio && ls | grep "glmnet" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "glmnet" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "glmnet" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: futureapply-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("future.apply", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/future.apply /mnt/libs/R/future.apply && cd /home/rstudio && ls | grep "future.apply" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "future.apply" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "future.apply" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: furrr-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("furrr", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/furrr /mnt/libs/R/furrr && cd /home/rstudio && ls | grep "furrr" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "furrr" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "furrr" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: fst-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("fst", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/fst /mnt/libs/R/fst && cd /home/rstudio && ls | grep "fst" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "fst" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "fst" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: fgarch-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("fGarch", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/fGarch /mnt/libs/R/fGarch && cd /home/rstudio && ls | grep "fGarch" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "fGarch" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "fGarch" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: excelr-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("excelR", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/excelR /mnt/libs/R/excelR && cd /home/rstudio && ls | grep "excelR" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "excelR" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "excelR" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: energy-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("energy", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/energy /mnt/libs/R/energy && cd /home/rstudio && ls | grep "energy" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "energy" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "energy" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: einsum-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("einsum", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/einsum /mnt/libs/R/einsum && cd /home/rstudio && ls | grep "einsum" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "einsum" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "einsum" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: edger-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("edgeR", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/edgeR /mnt/libs/R/edgeR && cd /home/rstudio && ls | grep "edgeR" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "edgeR" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "edgeR" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: ecp-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("ecp", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/ecp /mnt/libs/R/ecp && cd /home/rstudio && ls | grep "ecp" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "ecp" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "ecp" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: dqrng-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("dqrng", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/dqrng /mnt/libs/R/dqrng && cd /home/rstudio && ls | grep "dqrng" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "dqrng" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "dqrng" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: distrex-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("distrEx", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/distrEx /mnt/libs/R/distrEx && cd /home/rstudio && ls | grep "distrEx" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "distrEx" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "distrEx" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: diffr-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("diffr", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/diffr /mnt/libs/R/diffr && cd /home/rstudio && ls | grep "diffr" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "diffr" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "diffr" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: desc-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("desc", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/desc /mnt/libs/R/desc && cd /home/rstudio && ls | grep "desc" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "desc" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "desc" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: dbscan-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("dbscan", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/dbscan /mnt/libs/R/dbscan && cd /home/rstudio && ls | grep "dbscan" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "dbscan" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "dbscan" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: cubature-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("cubature", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/cubature /mnt/libs/R/cubature && cd /home/rstudio && ls | grep "cubature" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "cubature" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "cubature" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: crosstalk-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("crosstalk", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/crosstalk /mnt/libs/R/crosstalk && cd /home/rstudio && ls | grep "crosstalk" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "crosstalk" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "crosstalk" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: crmn-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("crmn", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/crmn /mnt/libs/R/crmn && cd /home/rstudio && ls | grep "crmn" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "crmn" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "crmn" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: cqn-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("cqn", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/cqn /mnt/libs/R/cqn && cd /home/rstudio && ls | grep "cqn" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "cqn" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "cqn" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: covr-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("covr", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/covr /mnt/libs/R/covr && cd /home/rstudio && ls | grep "covr" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "covr" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "covr" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: convert-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("convert", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/convert /mnt/libs/R/convert && cd /home/rstudio && ls | grep "convert" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "convert" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "convert" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: cobs-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("cobs", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/cobs /mnt/libs/R/cobs && cd /home/rstudio && ls | grep "cobs" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "cobs" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "cobs" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: clusterrepro-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("clusterRepro", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/clusterRepro /mnt/libs/R/clusterRepro && cd /home/rstudio && ls | grep "clusterRepro" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "clusterRepro" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "clusterRepro" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: clustercrit-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("clusterCrit", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/clusterCrit /mnt/libs/R/clusterCrit && cd /home/rstudio && ls | grep "clusterCrit" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "clusterCrit" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "clusterCrit" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: clue-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("clue", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/clue /mnt/libs/R/clue && cd /home/rstudio && ls | grep "clue" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "clue" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "clue" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: clisymbols-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("clisymbols", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/clisymbols /mnt/libs/R/clisymbols && cd /home/rstudio && ls | grep "clisymbols" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "clisymbols" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "clisymbols" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: clipr-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("clipr", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/clipr /mnt/libs/R/clipr && cd /home/rstudio && ls | grep "clipr" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "clipr" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "clipr" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: clinfun-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("clinfun", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/clinfun /mnt/libs/R/clinfun && cd /home/rstudio && ls | grep "clinfun" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "clinfun" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "clinfun" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: class-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("class", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/class /mnt/libs/R/class && cd /home/rstudio && ls | grep "class" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "class" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "class" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: circular-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("circular", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/circular /mnt/libs/R/circular && cd /home/rstudio && ls | grep "circular" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "circular" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "circular" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: chron-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("chron", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/chron /mnt/libs/R/chron && cd /home/rstudio && ls | grep "chron" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "chron" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "chron" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: chromstardata-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("chromstaRData", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/chromstaRData /mnt/libs/R/chromstaRData && cd /home/rstudio && ls | grep "chromstaRData" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "chromstaRData" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "chromstaRData" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: chromhmmdata-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("chromhmmData", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/chromhmmData /mnt/libs/R/chromhmmData && cd /home/rstudio && ls | grep "chromhmmData" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "chromhmmData" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "chromhmmData" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: chk-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("chk", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/chk /mnt/libs/R/chk && cd /home/rstudio && ls | grep "chk" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "chk" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "chk" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: checkmate-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("checkmate", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/checkmate /mnt/libs/R/checkmate && cd /home/rstudio && ls | grep "checkmate" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "checkmate" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "checkmate" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: changepoint-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("changepoint", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/changepoint /mnt/libs/R/changepoint && cd /home/rstudio && ls | grep "changepoint" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "changepoint" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "changepoint" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: cgdsr-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("cgdsr", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/cgdsr /mnt/libs/R/cgdsr && cd /home/rstudio && ls | grep "cgdsr" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "cgdsr" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "cgdsr" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: ccdata-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("ccdata", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/ccdata /mnt/libs/R/ccdata && cd /home/rstudio && ls | grep "ccdata" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "ccdata" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "ccdata" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: ccapp-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("ccaPP", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/ccaPP /mnt/libs/R/ccaPP && cd /home/rstudio && ls | grep "ccaPP" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "ccaPP" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "ccaPP" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: cba-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("cba", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/cba /mnt/libs/R/cba && cd /home/rstudio && ls | grep "cba" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "cba" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "cba" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: catnet-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("catnet", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/catnet /mnt/libs/R/catnet && cd /home/rstudio && ls | grep "catnet" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "catnet" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "catnet" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: catdata-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("catdata", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/catdata /mnt/libs/R/catdata && cd /home/rstudio && ls | grep "catdata" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "catdata" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "catdata" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: cardata-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("carData", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/carData /mnt/libs/R/carData && cd /home/rstudio && ls | grep "carData" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "carData" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "carData" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: capushe-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("capushe", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/capushe /mnt/libs/R/capushe && cd /home/rstudio && ls | grep "capushe" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "capushe" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "capushe" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: callr-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("callr", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/callr /mnt/libs/R/callr && cd /home/rstudio && ls | grep "callr" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "callr" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "callr" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: calibrate-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("calibrate", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/calibrate /mnt/libs/R/calibrate && cd /home/rstudio && ls | grep "calibrate" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "calibrate" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "calibrate" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: catools-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("caTools", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/caTools /mnt/libs/R/caTools && cd /home/rstudio && ls | grep "caTools" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "caTools" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "caTools" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: cmap2data-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("cMap2data", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/cMap2data /mnt/libs/R/cMap2data && cd /home/rstudio && ls | grep "cMap2data" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "cMap2data" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "cMap2data" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: cmap-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("cMAP", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/cMAP /mnt/libs/R/cMAP && cd /home/rstudio && ls | grep "cMAP" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "cMAP" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "cMAP" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: batch/v1
kind: Job
metadata:
  name: c3net-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("c3net", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 1.5Gi
            cpu: 1000m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/c3net /mnt/libs/R/c3net && cd /home/rstudio && ls | grep "c3net" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "c3net" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "c3net" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
